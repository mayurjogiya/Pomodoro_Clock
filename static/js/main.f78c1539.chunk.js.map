{"version":3,"sources":["logo.svg","App.js","index.js"],"names":["App","accurateInterval","fn","time","cancel","nextAt","timeout","wrapper","Date","getTime","setTimeout","clearTimeout","TimerLength","className","id","this","props","titleID","title","class","minID","onClick","value","lengthID","length","addID","React","Component","Timer","state","breakLength","sessionLength","timerState","timerType","timer","intervalID","alarmColor","color","setBreakLength","bind","setSessionLength","lengthControl","timerControl","beginCountDown","decrementTimer","phaseControl","warning","buzzer","switchTimer","clockify","reset","e","currentTarget","stateToChange","sign","currentLength","setState","_timer","audioBeep","play","num","str","minutes","Math","floor","seconds","pause","currentTime","preload","ref","audio","src","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f78c1539.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//Code by Mayur Jogiya\n\nconst accurateInterval = function (fn, time) {\n  var cancel, nextAt, timeout, wrapper;\n  nextAt = new Date().getTime() + time;\n  timeout = null;\n  wrapper = function () {\n      nextAt += time;\n      timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n      return fn();\n  };\n  cancel = function () {\n      return clearTimeout(timeout);\n  };\n  timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n  return {\n      cancel: cancel\n  };\n};\n\n\n\nclass TimerLength extends React.Component {\n\n  render() {\n      return (\n          <div className=\"length-control\">\n              <h1 id={this.props.titleID}>{this.props.title}</h1>\n              <div class=\"btn\">\n                  <button\n                      className=\"btn-level\"\n                      id={this.props.minID}\n                      onClick={this.props.onClick}\n                      value=\"-\"\n                  >\n                      <i className=\"fa fa-arrow-down fa-2x\" />\n                  </button>\n                  <h1 className=\"btn-level\" id={this.props.lengthID}>\n                      {this.props.length}\n                  </h1>\n                  <button\n                      className=\"btn-level\"\n                      id={this.props.addID}\n                      onClick={this.props.onClick}\n                      value=\"+\"\n                  >\n                      <i className=\"fa fa-arrow-up fa-2x\" />\n                  </button>\n              </div>\n          </div>\n      )\n  }\n\n\n}\n\n\n\nclass Timer extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          breakLength: 5,\n          sessionLength: 25,\n          timerState: 'stopped',\n          timerType: 'Session',\n          timer: 1500,\n          intervalID: '',\n          alarmColor: { color: 'white' }\n      };\n      this.setBreakLength = this.setBreakLength.bind(this);\n      this.setSessionLength = this.setSessionLength.bind(this);\n      this.lengthControl = this.lengthControl.bind(this);\n      this.timerControl = this.timerControl.bind(this);\n      this.beginCountDown = this.beginCountDown.bind(this);\n      this.decrementTimer = this.decrementTimer.bind(this);\n      this.phaseControl = this.phaseControl.bind(this);\n      this.warning = this.warning.bind(this);\n      this.buzzer = this.buzzer.bind(this);\n      this.switchTimer = this.switchTimer.bind(this);\n      this.clockify = this.clockify.bind(this);\n      this.reset = this.reset.bind(this);\n  }\n  setBreakLength(e) {\n      this.lengthControl(\n          'breakLength',\n          e.currentTarget.value,\n          this.state.breakLength,\n          'Session'\n      );\n  }\n  setSessionLength(e) {\n      this.lengthControl(\n          'sessionLength',\n          e.currentTarget.value,\n          this.state.sessionLength,\n          'Break'\n      );\n  }\n\n  lengthControl(stateToChange, sign, currentLength, timerType) {\n      if (this.state.timerState === 'running') {\n          return;\n      }\n      if (this.state.timerType === timerType) {\n          if (sign === '-' && currentLength !== 1) {\n              this.setState({ [stateToChange]: currentLength - 1 });\n          } else if (sign === '+' && currentLength !== 60) {\n              this.setState({ [stateToChange]: currentLength + 1 });\n          }\n      } else if (sign === '-' && currentLength !== 1) {\n          this.setState({\n              [stateToChange]: currentLength - 1,\n              timer: currentLength * 60 - 60\n          });\n      } else if (sign === '+' && currentLength !== 60) {\n          this.setState({\n              [stateToChange]: currentLength + 1,\n              timer: currentLength * 60 + 60\n          });\n      }\n  }\n\n  timerControl() {\n      if (this.state.timerState === 'stopped') {\n          this.beginCountDown();\n          this.setState({ timerState: 'running' });\n      } else {\n          this.setState({ timerState: 'stopped' });\n          if (this.state.intervalID) {\n              this.state.intervalID.cancel();\n          }\n      }\n  }\n\n  beginCountDown() {\n      this.setState({\n          intervalID: accurateInterval(() => {\n              this.decrementTimer();\n              this.phaseControl();\n          }, 1000)\n      });\n  }\n\n  decrementTimer() {\n      this.setState({ timer: this.state.timer - 1 });\n  }\n\n  phaseControl() {\n      let timer = this.state.timer;\n      this.warning(timer);\n      this.buzzer(timer);\n      if (timer < 0) {\n          if (this.state.intervalID) {\n              this.state.intervalID.cancel();\n          }\n          if (this.state.timerType === 'Session') {\n              this.beginCountDown();\n              this.switchTimer(this.state.breakLength * 60, 'Break');\n          } else {\n              this.beginCountDown();\n              this.switchTimer(this.state.sessionLength * 60, 'Session');\n          }\n      }\n  }\n\n  warning(_timer) {\n      if (_timer < 61) {\n          this.setState({ alarmColor: { color: '#a50d0d' } });\n      } else {\n          this.setState({ alarmColor: { color: 'white' } });\n      }\n  }\n\n  buzzer(_timer) {\n      if (_timer === 0) {\n          this.audioBeep.play();\n      }\n  }\n\n  switchTimer(num, str) {\n      this.setState({\n          timer: num,\n          timerType: str,\n          alarmColor: { color: 'white' }\n      });\n  }\n\n  clockify() {\n      let minutes = Math.floor(this.state.timer / 60);\n      let seconds = this.state.timer - minutes * 60;\n      seconds = seconds < 10 ? '0' + seconds : seconds;\n      minutes = minutes < 10 ? '0' + minutes : minutes;\n      return minutes + ':' + seconds;\n  }\n\n  reset() {\n      this.setState({\n          breakLength: 5,\n          sessionLength: 25,\n          timerState: 'stopped',\n          timerType: 'Session',\n          timer: 1500,\n          intervalID: '',\n          alarmColor: { color: 'white' }\n      });\n      if (this.state.intervalID) {\n          this.state.intervalID.cancel();\n      }\n      this.audioBeep.pause();\n      this.audioBeep.currentTime = 0;\n  }\n\n\n\n  render() {\n      return (\n          <div>\n              <h1 class=\"head\">25 + 5 Clock</h1>\n              <div class=\"btn\">\n              <TimerLength\n                  addID=\"break-increment\"\n                  length={this.state.breakLength}\n                  lengthID=\"break-length\"\n                  minID=\"break-decrement\"\n                  onClick={this.setBreakLength}\n                  title=\"Break Length\"\n                  titleID=\"break-label\"\n              />\n              <TimerLength\n                  addID=\"session-increment\"\n                  length={this.state.sessionLength}\n                  lengthID=\"session-length\"\n                  minID=\"session-decrement\"\n                  onClick={this.setSessionLength}\n                  title=\"Session Length\"\n                  titleID=\"session-label\"\n              />\n              </div>\n              <div id=\"timers\">\n                  <div id=\"timer-wrap\">\n                      <h1 id=\"timer-label\">{this.state.timerType}</h1>\n                      <h2 id=\"time-left\">{this.clockify()}</h2>\n                  </div>\n                  <div>\n                      <button id=\"start_stop\" onClick={this.timerControl}>\n                          <i className=\"fa fa-play fa-2x\" />\n                          <i className=\"fa fa-pause fa-2x\" />\n                      </button>\n                      <button id=\"reset\" onClick={this.reset}>\n                          <i className=\"fa fa-refresh fa-2x\" />\n                      </button>\n                  </div>\n              </div>\n          \n              <audio\n                  id=\"beep\"\n                  preload=\"auto\"\n                  ref={(audio) => {\n                      this.audioBeep = audio;\n                  }}\n                  src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n              />\n              <div id=\"ownerInfo\">\n            MADE BY  <span id=\"name\">mayur jogiya</span>\n          </div>\n          </div>\n      )\n  }\n}\n\nReactDOM.render(<Timer />, document.getElementById(\"root\"));\n"],"sourceRoot":""}